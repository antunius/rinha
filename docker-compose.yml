version: '3.6'
services:
  api1: # API - Instância 01
    container_name: api1
    image: marcusantunius/rinha:1.0
    hostname: api1
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/rinha"
      HOST: 0.0.0.0
      PORT: 81
      MAX_CONN: 20
    depends_on:
      - db
    expose:
      - "81"
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  api2: # API - Instância 02
    container_name: api2
    image: marcusantunius/rinha:1.0
    hostname: api2
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/rinha"
      HOST: 0.0.0.0
      PORT: 82
      MAX_CONN: 50
    depends_on:
      - db
    expose:
      - "82"
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '150MB'
    extra_hosts:
      - "host.docker.internal:host-gateway"


  db: # Banco de dados
    image: postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: rinha
    ports:
      - '5432:5432'
    command: postgres -c 'max_connections=10000' -c 'logging_collector=off' -c 'fsync=off' -c 'listen_addresses=*' -c 'work_mem=100MB' -c 'log_statement=none'
    volumes:
      - ./postgres/:/docker-entrypoint-initdb.d/
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1.5GB'
